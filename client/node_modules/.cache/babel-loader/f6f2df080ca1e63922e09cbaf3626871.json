{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartitem) => accumalatedQuantity + cartitem.quantity, 0));\nexport const selectHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartitem) => accumalatedQuantity + cartitem.quantity * cartitem.price, 0));","map":{"version":3,"sources":["/Users/spushpan/learn/crwn-cloathing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumalatedQuantity","cartitem","quantity","selectHidden","hidden","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACLA,SAAS,CAACE,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGI,CAHJ,CAH0C,CAA3C;AAUP,OAAO,MAAMC,YAAY,GAAGX,cAAc,CACtC,CAACC,UAAD,CADsC,EAErCE,IAAD,IAAUA,IAAI,CAACS,MAFuB,CAAnC;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACLA,SAAS,CAACE,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACK,KAFvD,EAGI,CAHJ,CAHqC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => \n        cartItems.reduce(\n            (accumalatedQuantity, cartitem) => \n            accumalatedQuantity + cartitem.quantity,\n            0 \n    )\n);\n\nexport const selectHidden = createSelector(\n    [selectCart],\n    (cart) => cart.hidden\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => \n        cartItems.reduce(\n            (accumalatedQuantity, cartitem) => \n            accumalatedQuantity + cartitem.quantity * cartitem.price,\n            0 \n    )\n)"]},"metadata":{},"sourceType":"module"}