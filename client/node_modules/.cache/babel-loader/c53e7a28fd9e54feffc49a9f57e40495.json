{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    console.log('start dispatch');\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/spushpan/learn/crwn-cloathing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","console","log","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,uBADgC;AAEtDD,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAAhC;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAE5C,SAAOC,QAAQ,IAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAJ,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACAa,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AAC/B,YAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHL,EAIKc,KAJL,CAIWC,KAAK,IAAIT,QAAQ,CAACH,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAJ5B;AAKH,GATD;AAWH,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport{ firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTION_START,  \n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTION_SUCCESS, \n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n    type: ShopActionTypes.fetchCollectionsFailure, \n    payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n\n    return dispatch => {\n        console.log('start dispatch')\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n        collectionRef.get().then((snapshot) => {            \n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);               \n                dispatch(fetchCollectionsSuccess(collectionsMap));                              \n            })\n            .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n    }\n    \n};"]},"metadata":{},"sourceType":"module"}