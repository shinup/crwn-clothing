{"ast":null,"code":"var _jsxFileName = \"/Users/spushpan/learn/crwn-cloathing/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverView from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selector';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverView);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionsStartAsync,\n  match,\n  isCollectionLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [fetchCollectionsStartAsync]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: !isCollectionLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 68\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n      isLoading: !isCollectionLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 82\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/spushpan/learn/crwn-cloathing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","CollectionsOverView","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","match","isCollectionLoaded","path","props","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAGA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,0BAAR,EAAoCC,wBAApC,QAAmE,gCAAnE;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,0BAA0B,GAAIL,WAAW,CAACD,cAAD,CAA/C;;AAEA,MAAOO,QAAQ,GAAG,CAAC;AAACL,EAAAA,0BAAD;AAA6BM,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAAD,KAA8D;AAC5Ed,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,0BAA0B;AAC3B,GAFQ,EAEP,CAACA,0BAAD,CAFO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAE,CAACF;AAA5C,OAAoEE,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEH,KAAK,CAACE,IAAK,gBAAjC;AAAkD,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,MAAA,SAAS,EAAE,CAACF;AAAxC,OAAgEE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAZD;;AAcA,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAGV,0BADsB;AAE7CM,EAAAA,kBAAkB,EAAGL;AAFwB,CAAD,CAAhD;;AAIA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACvCb,EAAAA,0BAA0B,EAAG,MAAOa,QAAQ,CAACb,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAGA,eAAeL,OAAO,CAACe,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CP,QAA5C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n\nimport CollectionsOverView from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport {selectIsCollectionFetching, selectIsCollectionLoaded} from '../../redux/shop/shop.selector';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverView);\nconst CollectionsPageWithSpinner =  WithSpinner(CollectionPage);\n\nconst  ShopPage = ({fetchCollectionsStartAsync, match, isCollectionLoaded}) =>  {    \n    useEffect(() => {     \n      fetchCollectionsStartAsync();\n    },[fetchCollectionsStartAsync])\n    \n    return (\n        <div className='shop-page'> \n            <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={!isCollectionLoaded} {...props} />}/>\n            <Route exact path={`${match.path}/:collectionId`} render={(props) => <CollectionsPageWithSpinner isLoading={!isCollectionLoaded} {...props} />} />\n        </div>\n    );\n   \n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching : selectIsCollectionFetching,\n    isCollectionLoaded : selectIsCollectionLoaded\n});\nconst mapDispatchToProps = dispatch => ({\n fetchCollectionsStartAsync : () =>  dispatch(fetchCollectionsStartAsync())  \n})\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}